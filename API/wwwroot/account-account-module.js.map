{"version":3,"sources":["./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [null, \n        [Validators.required, Validators\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\n        [this.validateEmailNotTaken()]\n      ],\n      password: [null, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/shop');\n    }, error => {\n      console.log(error);\n      this.errors = error.errors;\n    })\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n               return res ? {emailExists: true} : null;\n            })\n          );\n        })\n      )\n    }\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n            </div>\n\n            <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n            <app-text-input formControlName=\"email\" [label]=\"'Email address'\"></app-text-input>\n            <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n            <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n                <li *ngFor=\"let error of errors\">\n                    {{error}}\n                </li>\n\n            </ul>\n\n            <button  class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountRoutingModule } from '../account-routing.module';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n\n\n  constructor(private accountService: AccountService , private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$') ]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n              <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n            </div>\n\n            \n        <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"> </app-text-input>\n        <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n            <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n           \n          </form>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n"],"sourceRoot":"webpack:///"}